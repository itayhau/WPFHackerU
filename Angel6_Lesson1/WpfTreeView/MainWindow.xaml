<Window x:Class="WpfTreeView.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfTreeView"
        Loaded="Window_Loaded"
        mc:Ignorable="d"
        Title="MainWindow" Height="350" Width="525" WindowStartupLocation="CenterScreen">
    <Grid>

        <TreeView x:Name="FolderView">
            <TreeView.Resources>

                <Style TargetType="{x:Type TreeViewItem}">
                    <Setter Property="HeaderTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">

                                    <!-- we bind the Image SOURCE string -->
                                    <!-- open HeaderToImageConverter.cs -->
                                    <!-- we not need the header here (in oppose to TextBlock below) -->
                                    <!-- we need the TAG, how do we find it?
                                            to do that we need an Ancestor which is a TreeViewItem , 
                                            so, we seek for Ancesestor and go up until we find a TreeViewItem:
                                               RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}
                                            from it we need the Tag property: 
                                               Path=Tag 
                                    -->
                                    <!-- then we need to Convert the Tag string into an Image,
                                         so we use the Converter static Instace:
                                            Converter={x:Static local:HeaderToImageConverter.Instance}}
                                         why local?
                                            look above (line 6)
                                            xmlns:local="clr-namespace:WpfTreeView"
                                            we need the namespace, so we made a variable named local and used it here
                                   -->
                                    <!-- You can also copy paste this part into the TextBlock and then you will see the Path text -->
                                    <Image Width="20" Margin="3" 
                                        Source="{Binding
                                            RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}},
                                            Path=Tag,
                                            Converter={x:Static local:HeaderToImageConverter.Instance}}" />

                                         <!-- {Binding} Attach the Text to the location context of the string 
                                               here we are in HeaderTemplate so the sring is the TreeViewItem.Header
                                          -->
                                    <TextBlock VerticalAlignment="Center" Text="{Binding}" /> 

                                </StackPanel>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TreeView.Resources>
        </TreeView>
    </Grid>
</Window>
